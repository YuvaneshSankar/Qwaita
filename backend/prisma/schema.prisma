generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  customer
}

enum Status {
  waiting
  served
  skipped
}

model User {
  id           Int      @id @default(autoincrement())
  clerkUserId  String   @unique                
  name         String?
  email        String?  @unique
  role         Role     @default(customer)     

  queueEntries QueueEntry[]
  businesses   Business[] @relation("BusinessOwner")
  notifications Notification[]

}

model Queue {
  id           String          @id @default(uuid())
  title        String
  businessId   String
  createdAt    DateTime     @default(now())

  business     Business     @relation(fields: [businessId], references: [id])
  queueEntries QueueEntry[]
}

model QueueEntry {
  id       Int     @id @default(autoincrement())
  userId   Int
  queueId  String
  position Int
  status   Status

  user     User    @relation(fields: [userId], references: [id])
  queue    Queue   @relation(fields: [queueId], references: [id])
}

model Business {
  id        String @id @default(uuid())
  name      String
  ownerId   Int

  owner     User    @relation("BusinessOwner", fields: [ownerId], references: [id])
  queues    Queue[]
}

model Notification {
  id      Int      @id @default(autoincrement())
  type    String
  time    DateTime @default(now())
  sentTo  Int

  user    User     @relation(fields: [sentTo], references: [id])
}

